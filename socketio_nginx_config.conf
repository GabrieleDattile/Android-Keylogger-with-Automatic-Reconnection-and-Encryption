upstream socketio_servers {
    server 192.168.1.100:12345;  # Sostituisci con l'IP statico del tuo server e la porta del servizio Socket.IO
    keepalive 64;  # Imposta il numero massimo di connessioni persistenti per upstream server
}

server {
    listen 80;
    server_name tuodominio.com;
    return 301 https://$host$request_uri;  # Redirect al HTTPS
}

server {
    listen 443 ssl;
    server_name tuodominio.com;

    # Configurazione del certificato SSL
    ssl_certificate /etc/nginx/ssl/tuodominio.com.crt;
    ssl_certificate_key /etc/nginx/ssl/tuodominio.com.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';

    # Headers di sicurezza
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    location /socket.io {
        proxy_pass http://socketio_servers/socket.io;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Rate limiting
        limit_req zone=one burst=5 nodelay;
    }

    # Definire la zona di limitazione delle richieste
    limit_req_zone $binary_remote_addr zone=one:10m rate=1r/s;

    # Firewall IP basato su elenco
    allow 192.168.1.0/24;  # Sostituisci con il tuo range di IP autorizzati
    deny all;  # Negher√† tutto l'accesso non autorizzato
}

# Firewall di base
http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # ...
    # Altre configurazioni

    server_tokens off;  # Nascondi la versione di Nginx
}
